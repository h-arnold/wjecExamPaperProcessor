[
    {
        "index": 0,
        "markdown": "# GCE AS/A LEVEL \n\n2500U20-1\n222-2500U20-1\n\n## FRIDAY, 27 MAY 2022 - MORNING\n\n## COMPUTER SCIENCE - AS unit 2 Practical Programming to Solve Problems\n\n2 hours\n\n## INSTRUCTIONS TO CANDIDATES\n\nThe question paper is divided into two main sections. Below are the recommended timings for this assessment.\n\n## Section A\n\nAnswer ALL questions in Section A.\nYou are advised to spend no more than $\\mathbf{6 0}$ minutes on this section.\nYou will be required to analyse and deconstruct the scenario to consider its component parts in terms that can be addressed through automated computation.\n\n## Section B\n\nSelect the programming language of your choice from section BI, BII or BIII and answer all questions within your chosen section.\nYou are advised to spend no more than $\\mathbf{6 0}$ minutes on this section.\nYou will be required to develop programs that solve computing problems referring to the initial scenario.\n\n## INFORMATION FOR CANDIDATES\n\nThe number of marks is given in brackets at the end of each question or part-question.\nThe total number of marks available is 60 .\nYou will need a computer with an installed functional copy of the Integrated Development Environment (IDE) appropriate to your chosen programming language and word processing software.\nA calculator is allowed in this examination.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 1,
        "markdown": "# Scenario \n\n## Fred's Fish and Chip Shop\n\n![img-0.jpeg](img-0.jpeg)\n\nFred's Fish and Chip Shop (Fred's) is a popular fast food shop serving freshly cooked fish and chips. Fred's is open seven days a week from 11am until 11pm.\n\nFred's needs many teams of staff to cover its long opening hours. The business currently records its data on paper and now wants a computerised system to store details of staff and stock.\n\nThe staffing structure of Fred's includes managers; each manager can be responsible for several teams of employees; each employee belongs to one team only. A team consists of several employees and is managed by one manager.\n\nThe main requirements of the new computer system for Fred's are to:\n\n- store details on managers, teams and employees;\n- store stock details including expiry dates;\n- carry out simple calculations such as calculating the price of stock;\n- accept electronic payment.",
        "images": [
            {
                "id": "img-0.jpeg",
                "top_left_x": 473,
                "top_left_y": 453,
                "bottom_right_x": 1174,
                "bottom_right_y": 1115,
                "image_path": "2500U20-1-270522/images/img_1_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 2,
        "markdown": "# Section A: Analysis and Design \n\nAnswer all questions (1 - 4) in this section.\n\nYou have been asked to analyse the scenario as a preliminary step towards creating a prototype computer system for Fred's.\n\nPresent your answers as a single word-processed document named: Section A\n\n1. (a) Create an entity relationship diagram for the staffing structure described in the scenario. There is no need to include any attributes.\n(b) Create a data structure table, including suitable validation checks, for one of the tables in your entity relationship diagram.\n2. Select and fully justify your proposed method of solution for the four main requirements listed in the scenario.\n3. Prepare a class diagram for electronic payments.\n\nThe class diagram should comprise:\n\n- One superclass with the name Transaction. This is to include two public properties of type integer called accountNumber and transactionID, and two public methods which each return an integer called getAccountNumber and getTransactionID\n- A subclass called Credit with one private property called amount, of type real and one private method called setAmount which accepts a real parameter.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 3,
        "markdown": "4. (a) Fred's uses this algorithm to calculate the Stock Cost based on the Cost of Purchase.\n\n```\n1 stockCost[4,2] is real {array to use}\n2\n3}\\mathrm{ costOfPurchase is real\n4\n5}\\mathrm{ input costOfPurchase\n6\n7}\\mathrm{ for i = 0 to 3\n8 stockCost [i,0] = i + 1\n9 stockCost [1,1] = costOfPurchase * ((i+1) * 1.1)\n10\n11 next i\n12\n13 End\n```\n\nUsing this algorithm, copy and complete the table below showing the contents of the array stockCost for the input provided.\ncostOfPurchase $=4.0$\n\n| stockCost <br> $[\\mathrm{i}, 0]$ |  |  |  |  |\n| :-- | :-- | :-- | :-- | :-- |\n| stockCost <br> $[\\mathrm{i}, 1]$ |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 4,
        "markdown": "(b) This is an algorithm for a binary search.\n\n```\nstart is integer\n\u30fb . .\n\u30fb . .\nmid is integer\nset start = 0\nset endv = 9999\n\u30fb . .\ninput searchValue\nrepeat\n    set mid = (start + endv) DIV 2\n        . . .\n            set found = TRUE\n            output \"SearchValue found at position\", Mid\n        endif\n    . . .\n    endif\n    if searchValue < stockCost[mid] then\n        set endv = mid - 1\n    endif\n. . .\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\nEnd\n```\n\nFred's intends to use the binary search algorithm shown to search the array stockCost. Several lines are missing from the algorithm.\n\nCopy the algorithm into your Section A answer document and complete it using lines selected from this list;\n\n- endv is integer\n- set start $=$ mid +1\n- if found = FALSE\n- found is Boolean\n- set found = FALSE\n- if searchValue = stockCost[mid] then\n- until (found = TRUE) OR (endv < start)\n- if searchValue > stockCost[mid] then",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 5,
        "markdown": "# Section B: Develop programs \n\nSelect the programming language of your choice from section BI, BII or BIII and answer both questions within your chosen section.\n\n## BI Visual Basic\n\nFred's wants a prototype computer system to be developed using Visual Basic.\n\n1. Open the file stock\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code which attempts to save stock details and return the number of stock items on file that match the search criteria entered e.g. expiry date.\n\nComplete this code.\nSave the changes made to the file stock.\n2. Using the internal facility of your chosen language, annotate the code from Question B1 above to clearly explain the design of this program to another software developer.\n\nSave the changes made to the file stock.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 6,
        "markdown": "# BII Java \n\n## Fred's wants a prototype computer system to be developed using Java.\n\n1. Open the file stock\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code which attempts to save stock details and return the number of stock items on file that match the search criteria entered e.g. expiry date.\n\n\n## Complete this code.\n\nSave the changes made to the file stock.\n2. Using the internal facility of your chosen language, annotate the code from Question B1 above to clearly explain the design of this program to another software developer.\n\nSave the changes made to the file stock.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 7,
        "markdown": "# BIII Python \n\nFred's wants a prototype computer system to be developed using Python.\n\n1. Open the file stock\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code which attempts to save stock details and return the number of stock items on file that match the search criteria entered e.g. expiry date.\n\nComplete this code.\nSave the changes made to the file stock.\n2. Using the internal facility of your chosen language, annotate the code from Question B1 above to clearly explain the design of this program to another software developer.\n\nSave the changes made to the file stock.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    }
]