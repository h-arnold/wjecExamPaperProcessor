[
    {
        "index": 0,
        "markdown": "# wjec cbac \n\n## GCE A LEVEL MARKING SCHEME\n\nSUMMER 2022\n\nA LEVEL COMPUTER SCIENCE - UNIT 3 1500U30-1",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 1,
        "markdown": "# INTRODUCTION \n\nThis marking scheme was used by WJEC for the 2022 examination. It was finalised after detailed discussion at examiners' conferences by all the examiners involved in the assessment. The conference was held shortly after the paper was taken so that reference could be made to the full range of candidates' responses, with photocopied scripts forming the basis of discussion. The aim of the conference was to ensure that the marking scheme was interpreted and applied in the same way by all examiners.\n\nIt is hoped that this information will be of assistance to centres but it is recognised at the same time that, without the benefit of participation in the examiners' conference, teachers may have different views on certain matters of detail or interpretation.\n\nWJEC regrets that it cannot enter into any discussion or correspondence about this marking scheme.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 2,
        "markdown": "# WJEC GCE A LEVEL COMPUTER SCIENCE - UNIT 3 \n\n## SUMMER 2022 MARK SCHEME\n\n| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 1. (a) | Award one mark for each correct answer up to a maximum of three. <br> A stack is a data structure of items that are added and removed according to the last-in first-out (LIFO) / firstin last-out (FILO) principle. <br> Items can only be added and removed from the stack from the top. <br> Push adds an item to the top of the stack, pop removes the item from the top. <br> A stack can be used as a recursive data structure. <br> Underflow occurs when an attempt is made to pop an empty stack / overflow occurs when an attempt is made to add to a full stack. <br> Pointers are used to keep track of the top of the stack. <br> Award one mark for a correct example <br> An example of the use of a stack would be to store webpages for a back button in a web browser. Accept any suitable example. | 3 | 1 b |  |  | 4 |\n| (b) (i) | The value '.' can be updated by setting alphabet $[6,3]=$ '!' <br> 1 mark for correct array assignment of char '!' <br> 1 mark for correct indices <br> Accept alphabet $[3,6]$ |  |  |  |  | 2 |\n| (ii) |  | 0 | 1 | 2 | 3 | 2 |\n|  | 0 | ID | firstname | Surname | Class |  |\n|  | 1 | 1 | Finn | Jackson | 7b |  |\n|  | 2 | 2 | Jakub | Kowalski | 7b |  |\n|  | 3 | 3 | Molly | Wilcox | 7a |  |\n|  | 1 mark for suitable indices and structure of twodimensional array. <br> 1 mark for appropriate pupil data |  |  |  |  |  |\n|  | 1 |  |  |  | 2a |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 3,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 2. (a) | An algorithm is a step by step set of instructions or rules (1 mark) which provides a solution to a specific problem (1 mark) | 2 | $1 b$ |  |  | 2 |\n| (b) | One mark for identifying a method and 1 mark for a description maximum of two marks <br> Flow charts can be used to define algorithms. <br> Flow charts are a diagrammatic visualisation of the inputs, outputs and processes completed by an algorithm. <br> Pseudocode can be used define algorithms. <br> Pseudocode is a generic programming language than cannot be translated in to machine code but can be interpreted by a developer. <br> Structured English can be used to define algorithms. Structured English breaks down compiled algorithm into simple English words to help show a step-by-step solution. | 2 | $1 b$ |  |  | 2 |\n| (c) | One mark for each correct answer up to a maximum of four <br> Recursive algorithms are more elegant than nonrecursive algorithms. <br> Non-recursive algorithms are less complex than recursive algorithms to program. <br> Recursive algorithms generally use less code than non-recursive algorithms. <br> Recursive algorithms can be more difficult to debug than non-recursive algorithms. | 4 | $1 b$ |  |  | 4 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 4,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 3. (a) | Correct answer can be established using different steps / laws / rules / identities / dual relations. <br> Indicative content <br> $(A+C) \\cdot(A . C+A . \\bar{C})+A . C$ <br> $(A+C) \\cdot A \\cdot(C+\\bar{C})+A . C$ <br> $(A+C) \\cdot A \\cdot(1)+A . C$ <br> $(A+C) \\cdot A+A . C$ <br> A. $(A+C)+C$ <br> A. $(A+C)$ <br> A. $A+A . C$ <br> $A+A . C$ <br> A <br> Correctly applying identities to arrive at correct answer 6 marks. <br> Correctly applying identities but arriving at wrong answer 1 mark for each correct application with a max of 5 marks. | 6 |  | $2 a$ |  |  |\n| (b) | Correct answer can be established using different steps / laws / rules / identities / dual relations. <br> Indicative content <br> $\\bar{X} \\cdot \\bar{Y} \\cdot(\\bar{X}+Y)+\\bar{Z}$ <br> $\\bar{X}+\\bar{Y} \\cdot \\bar{X}+\\bar{Y} \\cdot Y+\\bar{Z}$ <br> $\\bar{X}+\\bar{Y}+\\bar{Y} \\cdot Y+\\bar{Z}$ <br> $\\bar{X}+\\bar{Y} \\cdot Y+\\bar{Z}$ <br> $\\bar{X}+0+\\bar{Z}$ <br> $\\bar{X}+\\bar{Z}$ <br> Correctly applying De Morgan's Law 1 mark. <br> Correctly applying identities to arrive at correct answer 4 marks. <br> Correctly applying identities but arriving at wrong answer <br> 1 mark for each correct application with a max of 3 marks. | 1 <br> 4 |  | 2a |  | 5 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 5,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 4. | Indicative content |  |  |  |  | 8 |\n|  | declare searchChar as char declare first, last, $m$ as integer declare myArray[] as char[] |  |  |  |  |  |\n|  | input searchChar |  |  |  |  |  |\n|  | set first $=0$ |  |  |  |  |  |\n|  | set last $=$ len(myArray[]) - 1 |  |  |  |  |  |\n|  | repeat |  |  |  |  |  |\n|  | set $m=$ (first + last) DIV 2 |  |  |  |  |  |\n|  | if searchChar < myArray[m] then |  |  |  |  |  |\n|  | set last $=\\mathrm{m}-1$ |  |  |  |  |  |\n|  | else |  |  |  |  |  |\n|  | set first $=\\mathrm{m}+1$ |  |  |  |  |  |\n|  | end if |  |  |  |  |  |\n|  | until (myArray[m] = searchChar) |  |  |  |  |  |\n|  | output m |  |  |  |  |  |\n|  | Declare and initialise variables | 1 |  |  | 3c |  |\n|  | Use of outer loop | 1 |  |  | 3c |  |\n|  | Correct condition in outer loop | 1 |  |  | 3c |  |\n|  | Correct use of DIV or INT (to force $m$ into an integer) | 1 |  |  | 3c |  |\n|  | Correct calculation to identify midpoint | 1 |  |  | 3c |  |\n|  | Set first using midpoint | 1 |  |  | 3c |  |\n|  | Set last using midpoint | 1 |  |  | 3c |  |\n|  | Output position | 1 |  |  | 3c |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 6,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 5. (a) | Indicative content | 6 |  | 2a |  | 6 |\n|  | Input | Output |  |  |  |  |\n|  | Invalid input e.g. 99 or 1000 but not 'a' | error |  |  |  |  |\n|  | 365 | 3 |  |  |  |  |\n|  |  | 6 |  |  |  |  |\n|  |  | 5 |  |  |  |  |\n|  |  | 14 |  |  |  |  |\n|  |  | 365 |  |  |  |  |\n|  | 1 mark per row |  |  |  |  |  |\n| (b) | The purpose of the algorithm is to confirm the input (1 mark) and output the digit sum (sum of the digits) (1 mark) | 2 |  | 2a |  | 2 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 7,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 6. (a) (i) | One mark for each correct response up to a maximum of four. <br> Developers draft the design of a system up front and it does not change. <br> Only once the analysis and design stages are complete, developers cannot go back to a to make any changes. <br> If the analysis or design of the project are inaccurate or incorrect in any way, the project will fail due to the rigidness of the waterfall methodology. <br> Requires less communication between the client and the developer. <br> Client input is only required during analysis and at times the design stage. | 1 <br> 1 <br> 1 <br> 1 <br> 1 | 1 b <br> 1 b <br> 1b <br> 1b |  |  | 4 <br> 4 <br> 4 |\n| (ii) | One mark for each correct response up to a maximum of four. <br> Developers start with a simple project design and requirements. <br> Iterative approach as analysis and design relies on each other. <br> Analysis informs design and the design informs further analysis to be undertaken. <br> Changes can be made after each phase of development, analysis can be revisited, and designs changed. <br> Strong communication between the client and the developer should be regular <br> Clients are involved during all stages of development. | 1 <br> 1 <br> 1 <br> 1 <br> 1 | 1 b <br> 1 b <br> 1b <br> 1b |  |  | 4 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 8,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| (b) (i) | Questionnaires <br> These should be undertaken by a variety of stakeholders to support the analysis of the existing system. These questionnaires should measure the effectiveness of the current systems from the viewpoints of various stakeholders. <br> Observations <br> Formal observations should be undertaken by the analysis team. These observers should monitor the interactions stakeholders have of the current systems, making relevant notes. <br> Requirements <br> After the analysis has been completed a formal set of requirements should be produced for any proposed changes of an existing system or implementation of a new system. <br> 1 mark for name and 1 mark for description. | 2 | 1b |  |  | 2 |\n| (ii) | Annotated code listings <br> To ensure effective maintenance of the source code for any developer. A complete list of the annotated source code is required to resolve issues or extend the system. <br> Algorithm designs <br> A complete collection of all algorithm designs in pseudocode or flow chart format should be required. These can aide a future developer in following the logic of a program for maintenance purposes. <br> Data dictionaries <br> A data dictionary is a document that contains the structures of all databases, data types and the relationship between them. This is useful for maintaining, debugging and extending the data within the system <br> 1 mark for name and 1 mark for description. | 2b |  |  |  | 2 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 9,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 7. | <digit> ::= 0 | 1\\|2 . . . 8\\|9 | 1 | 2b |  | 6 |\n|  | <digits> ::= <digit><digit> <pub> ::= <digit><digit><digit><digit><digit> <prefix> ::= 978 | 1 <br> 1 <br> 1 |  | 2b <br> 2b <br> 2b |  |  |\n|  | <separator>::= \" \" | 1 |  | 2b |  |  |\n|  | <ISBN> ::= <prefix> <separator><digits> <separator><pub> <separator><digits> <separator>< digit > | 1 |  | 2b |  |  |\n|  | Answer not correct if BNF notation used incorrectly. Max of four marks. |  |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 10,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 8. (a) | One mark for each correct response to a maximum of two and one mark for example. <br> Functional programming uses a series of function definitions which are evaluated as a mathematical expression to solve a problem. <br> Functional programming is a declarative language which uses when programmer code what problem they want to solve rather than how they are going to a specific problem. <br> Functional programming is used in research and testing. <br> An example of a functional programming language is Haskell or SQL. | 3 <br> 1 <br> 1 <br> 1 | 1b |  |  |  |\n| (b) | One mark for each correct response to a maximum of two and one mark for example. <br> Logic programming is used to solve programming problems using a specific knowledge base. <br> Logic programming takes a problem or question and will produce a solution based on this knowledge base. <br> Logic programming is used in expert systems, machine learning and artificial intelligence. <br> An example of a logic programming language is PROLOG or Mercury. | 3 | 1b |  |  | 6 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 11,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 9. (a) | Award one mark for each correct response up to a maximum of two. <br> When new hardware or software is developed it needs to ensure it is compatible with existing hardware and software. <br> Products developed by different companies need to meet standards to ensure combability across platforms. <br> There must be interoperability between new products and with existing products to exchange and use data. <br> Using standards ensures products can work as part of larger system or network. <br> Examples of standardised computer languages are HTML5, CSS3 and JavaScript which are maintained by W3C (World Wide Web Consortium) | 2 | 1 b |  |  | 2 |\n| (b) | Award one mark for each correct response up to a maximum of two. <br> All standards must be very detailed to ensure consistency in their implementation which has high costs in terms of time and money. <br> Companies and business will only agree to standards when they are in their own best interests. <br> Many companies have different targets and goals, and this can cause difficulties when agreeing on unified standards. <br> Standards need to be broad enough to ensure they meet the demands of a wide range of complex problems but specific enough that they are implemented correctly. | 2 | 1 b |  |  | 2 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 12,
        "markdown": "| Question | Answer |  |  |  | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 10. |  |  |  |  |  |  |  |  | 4 |\n|  | A | B | A NOR B | NOT (A NOR B) | B AND NOT (A NOR B) |  |  |  |  |\n|  | 0 | 0 | 1 | 0 | 0 |  |  |  |  |\n|  | 0 | 1 | 0 | 1 | 1 |  |  |  |  |\n|  | 1 | 0 | 0 | 1 | 0 |  |  |  |  |\n|  | 1 | 1 | 0 | 1 | 1 |  |  |  |  |\n|  | Award one mark for each correct column <br> Award one mark for correct combinations of $A$ and $B$ |  |  |  | 3 <br> 1 |  | $2 b$ <br> $2 b$ |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 13,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 11. (a) | 1 mark for identifying i loop will execute n times <br> 1 mark for identifying j loop will execute $\\mathrm{n}^{2}$ times <br> 1 mark for identifying k loop will execute $\\mathrm{n}^{3}$ times <br> 1 mark for determining that the order will be dominated by $\\mathrm{n}^{3}$ <br> 1 mark for determining that the growth rate for time performance is $\\mathrm{O}\\left(\\mathrm{n}^{3}\\right)$ | 1 <br> 1 <br> 1 <br> 1 |  |  | 3c <br> 3c <br> 3c <br> 3c <br> 3c | 5 |\n| (b) | The algorithm only uses two data structures, 2 threedimensional arrays. Therefore, total storage requirements $=1$. <br> As there is no change to the amount of data structures being used, the growth rate for memory will be constant $\\mathrm{O}(1)$. | 1 |  | $2 b$ <br> $2 b$ |  | 2 |\n| (c) | ![img-0.jpeg](img-0.jpeg) <br> Size of data <br> Time and Size axes labelled correctly Correct gradient of line | 1 <br> 1 |  | $2 b$ <br> $2 b$ |  | 2 |",
        "images": [
            {
                "id": "img-0.jpeg",
                "top_left_x": 330,
                "top_left_y": 877,
                "bottom_right_x": 661,
                "bottom_right_y": 1169,
                "image_path": "1500U30-1 WJEC GCE A Level Computer Science - Unit 3 MS S22/images/img_13_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 14,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 12. | Data can be recovered from back-up of data simply by copying the back-up data back to the original location. | 1 | 1 b |  |  | 4 |\n|  | Temporary data can be searched to find an autosaved version of any files or data. | 1 |  |  |  |  |\n|  | Data may be recovered using specialist software to deep search for any deleted or lost data. | 1 |  |  |  |  |\n|  | Undergo a complete system restore to a previous point in time where the data is still available. | 1 |  |  |  |  |\n|  | Archived files kept off site could be used (eg after flood or fire) | 1 |  |  |  |  |\n|  | Returning to a previous version if data was lost during an update then running the update again. | 1 |  |  |  |  |\n|  | One mark for each correct response to a maximum of four. |  |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 15,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 13. | Indicative content <br> A code of conduct is a formal written document that outlines the acceptable workplace and ethical standards to which employees must abide. <br> Each employee or stakeholder agrees to act according to the clear guidelines outlines in a code of conduct usually by signing a formal contract. <br> A code of conduct may include standards on privacy, security, damage, access levels, copyright infringement, ethics and wellbeing. <br> If an employee or stakeholder breaks a code of conduct, then action can be taken against them for breaching this contract. <br> Disciplinary proceedings and policies are usually clearly laid out within a code of conduct which outline what action is taken in a breach. <br> In software development when working with both internal and external stakeholders abiding by a code of conduct is essential. <br> There are other codes of conduct professionals should adhere to outside of their employment based on their chosen career. <br> The British Computer Society outlines its own code of conduct for Computing and IT professionals to ensure integrity in their profession. <br> The BCS code of conduct compromises of four key principles: public interest, professional competence and integrity, duty to relevant authority and duty to the profession. <br> Each principle outlines standards to which each professional should abide to ensure their professional integrity in IT and Computing. <br> Public interest standards include having due regard for public health, privacy, security, the environment and of the wellbeing of others; conduct professional activity without discrimination on the grounds of sex, sexual orientation, nationality, ethnic origin etc. <br> During the analysis stage of development there will be a lot of communication with external stakeholders such as third-party businesses or clients. It is essential that when dealing with the public that employees act with this due regard. |  |  |  |  |  | 12 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 16,
        "markdown": "| Question | Answer | Mark | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  | Professional competence and integrity standards include only undertaking work for that is in your professional competence, not claim a level of skill you do not possess and reject and not make offer or bribery in your work. <br> During the analysis and design stages of the software development process it is essential that a company or professional only undertakes work of which they capable and do not overpromise on what the can deliver. <br> Professional competence and integrity standards include only undertaking work for that is in your professional competence, not claim a level of skill you do not possess and reject and not make offer or bribery in your work. <br> Duty to relevant authority standards include avoid any situation that may cause a conflict of interest, accept any responsibility for your work and not disclose any confidential information for personal gain. <br> During design and testing stages of development is it essentials that employees to not disclose any confidential information, many software companies include a non-disclosure agreement within their employment contracts. <br> Duty to the profession standards include upholding the reputation of the BCS, encourage others in professional development and seek to improve professional standards at all times. <br> Throughout all stage of the software development process it is essential to continually reflect professional develop and maintain recognised standards. <br> Other code of conducts with in the Computing profession include Association for Computing Machinery (ACM) code of ethics and professional conduct. |  |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 17,
        "markdown": "| Band | Q12 AO1b - Max 12 marks |\n| :--: | :--: |\n| 3 | 9 - 12 marks <br> The candidate has: <br> - written an extended response that has a sustained line of reasoning which is coherent, relevant, and logically structured <br> - shown clear understanding of the requirements of the question and a clear knowledge of the topics as specified in the indicative content. Clear knowledge is defined as responses that provide relevant detailed points of the indicative content, which relate to an extensive amount of the indicative content. <br> - addressed the question appropriately with minimal repetition and no irrelevant material <br> - has presented a balanced discussion and justified their answer with examples <br> - effectively drawn together different areas of knowledge, skills and understanding from all relevant areas across the course of study <br> - used appropriate technical terminology confidently and accurately. |\n| 2 | 5 - 8 marks <br> The candidate has: <br> - written a response that has an adequate line of reasoning with elements of coherence, relevance, and logical structure <br> - shown adequate understanding of the requirements of the question and a satisfactory knowledge of the topics as specified in the indicative content. Satisfactory knowledge is defined as responses that provide relevant points of the indicative content, which relate to the indicative content. <br> - presented a discussion with limited examples <br> - drawn together different areas of knowledge, skills and understanding from a number of areas across the course of study <br> - used appropriate technical terminology. |\n| 1 | 1- 4 marks <br> The candidate has: <br> - written a response that that lacks sufficient reasoning and structure <br> - produced a discussion which is not well developed <br> - attempted to address the question but has demonstrated superficial knowledge of the topics specified in the indicative content. Superficial knowledge is defined as responses that provide limited relevant points of the indicative content, which relate to a limited amount the indicative content. <br> - used limited technical terminology. |\n| 0 | Response not credit worthy or not attempted. |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    }
]