[
    {
        "index": 0,
        "markdown": "# wjec cbac \n\n## GCE AS MARKING SCHEME\n\nSUMMER 2017\n\nAS (NEW)\nCOMPUTER SCIENCE - UNIT 1\n2500U10-1",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 1,
        "markdown": "# INTRODUCTION \n\nThis marking scheme was used by WJEC for the 2017 examination. It was finalised after detailed discussion at examiners' conferences by all the examiners involved in the assessment. The conference was held shortly after the paper was taken so that reference could be made to the full range of candidates' responses, with photocopied scripts forming the basis of discussion. The aim of the conference was to ensure that the marking scheme was interpreted and applied in the same way by all examiners.\n\nIt is hoped that this information will be of assistance to centres but it is recognised at the same time that, without the benefit of participation in the examiners' conference, teachers may have different views on certain matters of detail or interpretation.\n\nWJEC regrets that it cannot enter into any discussion or correspondence about this marking scheme.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 2,
        "markdown": "# GCE AS COMPUTER SCIENCE - UNIT 1 (NEW) \n\n## SUMMER 2017 MARK SCHEME\n\n| Q | Answer |  | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 1 |  |  |  |  |  |  | 2 |\n|  | A AND B | B XOR (A AND B) |  |  |  |  |  |\n|  | 0 | 0 |  |  |  |  |  |\n|  | 0 | 1 |  |  |  |  |  |\n|  | 0 | 0 |  |  |  |  |  |\n|  | 1 | 0 |  |  |  |  |  |\n|  | One mark for each: <br> - A AND B <br> - B XOR (A AND B) |  | 1 |  | 2.1a |  |  |\n|  |  |  |  |  | 2.1a |  |  |\n| 2 | Hard Disk Drive (max of four) <br> - Hard drives have a fast transfer rate and a fairly fast access time, they provide a good compromise between storage capacity, performance and cost. <br> - Their speed does not come close to the speed of memory, the CPU or SSD. <br> - Hard drives are a magnetic medium and store data on a hard drive platter. <br> - Data is read and saved using an arm that has a special read/write head at the end. <br> - As the disk spins, the arm travels across the disk. <br> - Each sector of the platter can store data and the movement of both the disk and the read/write head means that every sector on the hard drive can be reached. <br> - The faster the platter spins, the faster data can be read from the disk. This speed is measured in revolutions per minute, or RPM. <br> - A common speed for hard drives is 7200 RPM, but it can vary. <br> - Can be used as a hybrid with SSD. <br> - Fragmentation can slow access speeds | 6 | 1.1 b |  |  | 10 |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 3,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  | Optical Drive (max of four) <br> - Optical drives work by using lasers to store data <br> - Burning microscopic indentations into a disc such as a CD. <br> - This pattern of indentations is created in a spiral pattern, starting from the middle. <br> - Indentations and their absence create pits and lands. <br> - A laser is aimed at the disc and reflected back, which can cause interference with the original laser. <br> - DVD-ROM uses the same techniques to store data, but the data is stored on two layers. <br> - Some optical drives havetwo lasers of differing wavelength that are used to read data from the two layers. <br> - On Bluray pits and lands are stored closer together, meaning that the laser's wavelength must be shorter (blue). <br> Comparison between HDD and optical drive: <br> - Storage capacity - HDD has greater capacity <br> - Speed of access - HDD is quicker / faster <br> - Cost per unit of storage <br> - Durability - Optical is more durable <br> - Portability - Both are portable <br> Typical Capacity <br> - HDD: 500MB - 4 TB <br> - OD: 650MB - 128GB <br> Typical Use <br> - HDD: Storing programs / OS / Server backup <br> - OD: Movies / Music | 2 | 1.1 b |  |  |  |\n| 3(a) | - A protocol is an agreed upon format (set of rules) which allows two devices to communicate. / the transfer of data | 1 | 1.1 b |  |  | 1 |\n| 3(b)(i) | - DHCP | 1 |  | 2.1a |  | 1 |\n| 3(b)(ii) | - SMTP | 1 |  | 2.1a |  | 1 |\n| 3(b)(iii) | - TCP/IP | 1 |  | 2.1a |  | 1 |\n| 3(c) | - When a computer system establishes a devices readiness to communicate | 1 | 1.1 b |  |  | 1 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 4,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 3(d) | - Collision <br> - The transmitting nodes waits a random amount of time before trying to resend the packet | $\\begin{gathered} 1 \\\\ 1 \\end{gathered}$ | $\\begin{aligned} & 1.1 \\mathrm{a} \\\\ & 1.1 \\mathrm{~b} \\end{aligned}$ |  |  | 2 |\n| 3(e) | One mark for each of the following up to a maximum of three: <br> - Data is split into packets <br> - Each packet has a destination address <br> - Packets are analysed by each node <br> - Packets are sent down the most appropriate path (lowest cost / traffic) to reach its destination <br> - Each node maintains a routing table <br> - Packets may take different routes. <br> - Packets are reassembled at their destination | 3 | 1.1 b |  |  | 3 |\n| 4(a)(i) | One mark for each of the following: <br> Storage requirements $=7$ bits <br> Example: $108_{10}=1101100_{2}$ | 1 <br> 1 |  | 2.1 a <br> 2.1 a |  | 2 |\n| 4(a)(ii) | $-63_{10}$ to $+63_{10}$ | 1 |  | 2.1 a |  | 1 |\n| 4(b) | One mark for each of the following up to a maximum of three: <br> - Each character is mapped to a binary number <br> - Ensures that computers use the same character representation and can transfer meaningful data <br> - Unicode allows the storage of complex characters such as Chinese script / emojis <br> - Unicode can represent a larger range of characters than ASCII | 3 | 1.1 b |  |  | 3 |\n| 4(c) | One mark for each of the following: <br> Character: $B=8$ bits (1 byte) <br> String: BOB $=24$ bits (3 bytes) <br> Accept 7 bit ASCII example if consistent for both character and string Accept Unicode or any other standard character set | 1 <br> 1 |  | 2.1 a <br> 2.1 a |  | 2 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 5,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 5 | Potential threats (any three of): <br> - fire, flood, lightning, terrorist attacks etc. <br> - hardware failure, e.g. power supply unit failing <br> - software failure, e.g. virus damage <br> - accidental damage <br> - malicious damage, e.g. hacking <br> Contingency planning (any three of): <br> - Before the disaster: risk analysis, preventative measures and staff training <br> - ensure that when a disaster happens, loss of data is minimised and the company has ensured that the data can be recovered. <br> - During the disaster: staff response implement contingency plans <br> - prevents further damage to the data and begins immediate recovery of data <br> - After the disaster: recovery measures, purchasing replacement hardware, reinstalling software, restoring data from backups <br> - restores normal running and recovers all data. | 3 | 1.1 b |  |  | 6 |\n| 6 | $\\begin{aligned} & A .(\\bar{A}+B)+C .(A+B)+\\bar{A} .(B+C) \\\\ & A . \\bar{A}+A . B+C . A+C . B+\\bar{A} . B+\\bar{A} . C \\\\ & 0+A . B+C . A+C . B+\\bar{A} . B+\\bar{A} . C \\\\ & A . B+A . C+B . C+\\bar{A} . B+\\bar{A} . C \\\\ & B+A . C+B . C+\\bar{A} . C \\\\ & B+C+B . C \\\\ & B+C \\end{aligned}$ | 1 <br> 1 <br> 1 <br> 1 <br> 1 <br> 1 <br> 1 |  | $\\begin{aligned} & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\end{aligned}$ |  | 6 |\n| 7(a) | Convert $87_{10}$ into binary: $01010111_{2}$ <br> Convert $113_{10}$ into binary: $01110001_{2}$ <br> Binary addition: <br> $01010111_{2}$ <br> $01110001_{2}$ <br> $11001000_{2}$ <br> $11101110$ <br> Convert $11001000_{2}$ into hexadecimal: $\\mathrm{C8}_{16}$ | 1 <br> 1 <br> 1 |  | $\\begin{aligned} & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\\\ & 2.1 \\mathrm{a} \\end{aligned}$ |  | 5 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 6,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 7(b)(i) | 100.001 | 1 |  | 2.1a |  | 3 |\n|  | Mantissa $=0.1000010$ <br> Exponent $=0011$ | 1 <br> 1 |  | 2.1a <br> 2.1a |  |  |\n| 7(b)(ii) | Mantissa $=0.9375$ <br> Exponent $=7$ <br> Answer $=120_{10}$ | 1 <br> 1 <br> 1 |  | 2.1a <br> 2.1a <br> 2.1a |  | 3 |\n| 8(a) | - TeacherID in Courses table <br> - StudentID in Student-Course table <br> - CourseID in Student-Course table <br> - StudentID in Courses table <br> Any one of: <br> - A foreign key is a primary key from one table included in another table <br> - A foreign key is used to form links between tables | 1 |  | 2.1a |  | 2 |\n|  |  |  |  | 2.1a |  |  |\n| 8(b) | A flat file system may contain a number of single tables / no links between them, (whereas a relational database normally contains a number of linked tables (/relations)). | 1 | 1.1b |  |  | 1 |\n| 8(c) | ![img-0.jpeg](img-0.jpeg) | 3 |  | 2.1b |  | 3 |\n| 1 mark for 3 correct entities <br> 1 mark for correct relationship between teacher-course <br> 1 mark for many-many relationship between student-course or link table <br> Accepted but not expected: Student-Course link table |  |  |  |  |  |  |",
        "images": [
            {
                "id": "img-0.jpeg",
                "top_left_x": 302,
                "top_left_y": 1133,
                "bottom_right_x": 929,
                "bottom_right_y": 1365,
                "image_path": "2500U10-1 WJEC GCE AS Comp Science Unit 1 MS S17 (New)/images/img_6_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 7,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 9 | One mark for each of the following up to a maximum of four: <br> - Uses objects and classes - include both data and associated processing <br> - Encapsulation - technical implementation is hidden within the object <br> - Inheritance - is the means by which properties and methods from a class are copied to another class <br> - Polymorphism - a form of overloading which allows us to create general object structures which can be used with a wider range of data types <br> - Enables production of buttons / icons etc. useful in a visual environment <br> - A class defines the methods properties (data) for a group of similar objects <br> - Once an object is created, knowledge of its implementation is not necessary for its use. <br> - Objects control how other objects interacts with themselves, preventing other kinds of errors, e.g. a programmer cannot set the width of a window to -500 <br> - In some languages, the programmer places objects on forms. These are event -driven languages <br> - An event, e.g. click a command button, initiates a sequence of code to be executed <br> - Objects created using object oriented languages can easily be reused in other programs | 4 | 1.1 b |  |  | 4 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 8,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 10 | Indicative content <br> 1 <br> Num is Integer <br> 2 <br> Divisor is Integer <br> 3 <br> Prime is Boolean <br> 4 <br> set Prime = TRUE \\{initialise variables\\} <br> 5 <br> set Divisor $=2$ <br> 6 <br> output \"type in a number\" <br> 7 <br> input Num <br> 8 <br> repeat <br> 10 if Num MOD Divisor $=0$ then <br> 11 set Prime = FALSE <br> 12 endif <br> 13 set Divisor = Divisor + 1 <br> 14 until (Prime = FALSE) OR <br> (Divisor = Num) <br> 15 <br> 16 if Prime = TRUE then <br> 17 output Num, \"is a prime number\" <br> 18 else <br> 19 output Num, \"is NOT a prime number\" <br> 20 Endif |  |  |  |  | 8 |\n|  | One mark for each of the following: <br> - Declare or initialise variables <br> - Input number <br> - Loop <br> - Use of selection to determine if num is a prime number <br> - Correct terminating condition <br> - Output message if prime <br> - Output message if not prime <br> - Algorithm provides all correct outputs | 1 <br> 1 <br> 1 <br> 1 <br> 1 <br> 1 <br> 1 <br> 1 |  |  | 3.1 b <br> 3.1 b <br> 3.1 b <br> 3.1 b <br> 3.1 b <br> 3.1 b |  |\n| 11(a)(i) | ![img-1.jpeg](img-1.jpeg) | 1 | 1.1 a |  |  | 1 |\n| 11(a)(ii) | One mark for any of the following: <br> - More convenient / easier / faster to find / access files <br> - Store related files in a logical way / same directory <br> - Can use the same file name in different directories <br> - Shows path to file / structure | 1 | 1.1 b |  |  | 1 |",
        "images": [
            {
                "id": "img-1.jpeg",
                "top_left_x": 297,
                "top_left_y": 1554,
                "bottom_right_x": 894,
                "bottom_right_y": 1695,
                "image_path": "2500U10-1 WJEC GCE AS Comp Science Unit 1 MS S17 (New)/images/img_8_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 9,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 11(b) | One mark for each of the following: <br> Archive <br> - When the file no longer in regular use but may be required sometime in the future <br> System <br> - When the file is only used by the operating system (for example a device driver) <br> Hidden <br> - When the user is unable to see the file (for example many files are hidden in Windows as the user cannot view or amend them if you view certain directories) | 3 <br> 3 | 1.1 a <br> 1.1 b |  |  | 6 |\n| 12 | One mark for each of the following up to a maximum of four: <br> Bubble <br> - A number of passes is made until the data is in order. <br> - For each pass through the data, each value is compared with the following one and swapping them if necessary. <br> Insertion sort <br> - Items are copied one by one <br> - Each new item is inserted in the correct place in the output | 2 | 1.1 b |  |  | 4 |\n| 13 | One mark for each of the following up to a maximum of five: <br> The DPA impacts on data as organisations are required to ensure: <br> Any five of: <br> - Data must be adequate, relevant and not excessive <br> - Data must be accurate and up to date <br> - Personal data stored for no longer than necessary <br> - Processed in line with your rights individual can check and amend data <br> - Held securely <br> - Data can only be transferred outside EEA to countries with adequate DPA <br> - Data is fairly and lawfully processed <br> - Data is processed for limited purposes. | 5 | 1.1 b |  |  | 5 |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 10,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| 14 | Indicative content | 12 | 1.1 b |  |  | 12 |\n|  | High level <br> - They are easier to understand, learn and program as commands are more Englishlike <br> - Identifiers can be long and meaningful <br> - They allow the use of powerful commands that perform quite complex tasks <br> - Allows creation of modules that can be reused and accessed by other parts of the program |  |  |  |  |  |\n|  | Low level <br> - Ideal when the execution speed is critical, e.g. boot strap loader <br> - More efficient than high level language programs <br> - Require less time for translation into machine code <br> - Generally result in smaller executable programs (more machine code than necessary) |  |  |  |  |  |\n|  | IDE <br> - Editor: this allows a programmer to enter and edit source code/annotation <br> - Compiler: Translates source code into machine code <br> - Interpreter: Translates each line/a single line of source code and executes it <br> - Automatic formatting: Correctly indents code <br> - Automatic colour coding: Changes key words, literals and annotation to different colours <br> - Linker: this is a program which allows previously compiled code, from software libraries, to be linked together <br> - Loader: this is a program which loads previously compiled code into memory. <br> - Debugger: this is a program which helps locate, identify and rectify errors in a program <br> - Syntax error detection: Highlighting syntax errors before code is translated Trace: this is a facility which displays the order in which the lines of a program are executed, and possibly the values of variables as the program is being run |  |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 11,
        "markdown": "| Q | Answer | Marks | AO1 | AO2 | AO3 | Total |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  | - Break point: this is a facility which interrupts a program on a specific line of code, allowing the programmer to compare the values of variables against expected values. The program code can then usually be executed one line at a time. This is called single-stepping <br> - Variable watch: this is a facility which displays the current value of any variable. The value can be 'watched' as the program code is single-stepped to see the effects of the code on the variable. Alternatively a variable watch may be set, which will interrupt the program flow if the watched variable reaches a specified value <br> - Memory inspector: this is a facility which will display the contents of a section of memory <br> - Error diagnostics: these are used when a program fails to compile or to run. Error messages are displayed to help the programmer diagnose what has gone wrong <br> - Emulator: will provide an emulator to run the code/app so no physical device required <br> - Context sensitive menu: IDE suggests available options <br> - Statement completion: IDE will complete a statement such as adding an 'end if' to an 'if' statement <br> - GUI creation: Allows programmer to create a GUI by dragging and dropping controls (buttons, etc...) onto a form. <br> - Publisher: facility to package up and deploy program as an easy to install package <br> - Code optimisation: Warning message when variables have been declared but not used. |  |  |  |  |  |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    },
    {
        "index": 12,
        "markdown": "| Band | AO1.1b <br> Max 12 marks |\n| :--: | :--: |\n| 3 | 9 - 12 marks <br> The candidate has: <br> - written an extended response that has a sustained line of reasoning which is coherent, relevant, and logically structured <br> - shown clear understanding of the requirements of the question and a clear knowledge of the indicative content. Clear knowledge is defined as a response that provides nine to twelve (up to a maximum of eight for IDE) relevant detailed points on high and low level languages and IDEs, which relate to an extensive amount of the indicative content <br> - addressed the question appropriately with minimal repetition and no irrelevant material <br> - has presented a balanced discussion and justified their answer with examples <br> - used appropriate technical terminology referring to the indicative content confidently and accurately. |\n| 2 | 5 - 8 marks <br> The candidate has: <br> - written a response that has an adequate line of reasoning with elements of coherence, relevance, and logical structure <br> - shown adequate understanding of the requirements of the question and a satisfactory knowledge of high and low level languages and IDEs as specified in the indicative content. Satisfactory knowledge is defined as a response that provides five to eight points (up to a maximum of five for IDE) as signalled in the indicative content <br> - has presented a discussion with limited examples <br> - used appropriate technical terminology referring to the indicative content. |\n| 1 | 1 - 4 marks <br> The candidate has: <br> - written a response that that lacks sufficient reasoning and structure <br> - produced a discussion which is not well developed <br> - attempted to address the question but has demonstrated superficial knowledge of the topics specified in the indicative content. Superficial knowledge is defined as a response that provides one to four points on high and low level languages and IDEs as signalled in the indicative content <br> - used limited technical terminology referring to the indicative content. |\n| 0 | 0 marks <br> - Response not credit worthy or not attempted. |",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2338,
            "width": 1654
        }
    }
]