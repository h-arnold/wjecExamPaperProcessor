[
    {
        "index": 0,
        "markdown": "# GCE A LEVEL \n\n## 1500U30-1 <br> EIIIIIIIIIIIIIIIIIIIIIIIIIIII\n\nMONDAY, 3 JUNE 2019 - MORNING\n\n## COMPUTER SCIENCE - A2 unit 3 <br> Programming and System Development\n\n2 hours\n\n## ADDITIONAL MATERIALS\n\nA WJEC pink 16-page answer booklet.\nA calculator.\n\n## INSTRUCTIONS TO CANDIDATES\n\nAnswer all questions.\nWrite your answers in the separate answer booklet provided.\n\n## INFORMATION FOR CANDIDATES\n\nThe number of marks is given in brackets at the end of each question or part-question; you are advised to divide your time accordingly.\nThe total number of marks available is 100 .\nAssessment will take into account the quality of written communication used in your answers.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 1,
        "markdown": "Answer all questions.\n\n1. (a) Explain the differences between stack and queue data structures.\n(b) This is a diagram of a linked list in alphabetical order.\n\n| A | C | G | L |\n| :--: | :--: | :--: | :--: |\n| 0 | - 0 | - 0 | - 0 |\n\n(i) Redraw the linked list after the data item ' $E$ ' has been added.\n(ii) Redraw the amended linked list after the data item ' $C$ ' has been deleted.\n2. Clearly showing each step, simplify the following Boolean expressions using Boolean algebra, identities and De Morgan's Law.\n(a) $A . \\bar{A}+A . B+A . \\bar{B}+B . \\bar{B}$\n(b) $(\\overline{\\mathrm{A} . \\mathrm{B}})+\\mathrm{A} . \\mathrm{C}+\\mathrm{B}$\n3. This is an eight-bit number:\n\n$$\n01101001_{2}\n$$\n\nInclude this number in a worked example to demonstrate how masking can be used to determine the state of the most significant bit.\n4. (a) Describe the term natural language interface.\n(b) Using an example, describe a potential use for natural language interfaces.\n(c) Describe the potential problems that can be associated with natural language interfaces.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 2,
        "markdown": "5. Below is an algorithm.\n\n```\nDeclare subprocedure myAlgorithm(myArray is integer, indexLow is\ninteger, indexHi is integer)\nDeclare pivot is integer\nDeclare tmpSwap is integer\nDeclare tmpLow is integer\nDeclare tmpHi is integer\nset tmpLow = indexLow\nset tmpHi = indexHi\nset pivot = myArray[(int((indexLow + indexHi)/2))]\nwhile (tmpLow <= tmpHi)\n    while (myArray[tmpLow] < pivot and tmpLow < indexHi)\n        set tmpLow = tmpLow + 1\n    end while\n    while (pivot < myArray[tmpHi] and tmpHi > indexLow)\n        set tmpHi = tmpHi - 1\n    end while\n    if (tmpLow <= tmpHi) then\n        set tmpSwap = myArray[tmpLow]\n        set myArray[tmpLow] = myArray[tmpHi]\n        set myArray[tmpHi] = tmpSwap\n        set tmpLow = tmpLow + 1\n        set tmpHi = tmpHi - 1\n    end if\nend while\nif (indexLow < tmpHi) then myAlgorithm(myArray, indexLow, tmpHi)\nif (tmpLow < indexHi) then myAlgorithm(myArray, tmpLow, indexHi)\n```\n\n(a) Describe the purpose of this algorithm.\n(b) Describe the characteristics of this type of algorithm.\n(c) Describe the advantages arising from the elegance of this algorithm.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 3,
        "markdown": "6. (a) Explain the purpose of a shortest path algorithm.\n(b) This is a diagram of the costs of traversing a network.\n![img-0.jpeg](img-0.jpeg)\n\nThe traversal cost for each node is 2 .\n(i) Show how this network and its traversal costs can be represented using a two dimensional array.\n(ii) State the shortest path from node $A$ to $E$ and calculate its cost.\n7. (a) Explain what is meant by the term programming paradigm.\n(b) Describe the difference between procedural and event-driven programming paradigms.\n(c) Using examples, describe which programming paradigms would be most suitable when developing different types of software applications.\n8. Draw a truth table to prove the following:\n\nA NOR B = NOT A AND NOT B",
        "images": [
            {
                "id": "img-0.jpeg",
                "top_left_x": 471,
                "top_left_y": 418,
                "bottom_right_x": 1174,
                "bottom_right_y": 820,
                "image_path": "1500U30-1-030619/images/img_3_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 4,
        "markdown": "9. Below are two algorithms that search for a data item in a one dimensional array. You can assume that the data in the array is in ascending order and that the data item being searched is present. The Search_A algorithm has a time performance of $O(n)$.\n\n```\nAlgorithm Search_A\ndeclare searchKey, i as integer\ndeclare flag as Boolean\ndeclare myArray[] as integer[]\nInput searchKey\nSet i = 0\nflag = FALSE\nrepeat\n    if myArray[i] = searchKey then\n        set flag = TRUE\n    end if\n    set i = i + 1\nuntil (flag = TRUE)\noutput myArray[i]\n```\n\n```\nAlgorithm Search_B\ndeclare searchKey, first, last, m as integer\ndeclare myArray[] as integer[]\nInput searchKey\nSet first = 1\nSet last = len(myArray[])\nrepeat\n    set m = (first + last) DIV 2\n    if searchKey < myArray[m] then\n        set last = m - 1\n    else set first = m + 1\n    end if\nuntil (myArray[m] = searchKey)\noutput myArray [m]\n```\n\n(a) Evaluate the efficiency of the Search_B algorithm and using Big O notation, determine the growth rate for time performance.\n(b) Draw a graph of the algorithms above to illustrate their order of time performance. Graph paper is not required.\n(c) State which algorithm is more efficient when searching for a data item.\n10. Describe the term data compression and explain how data compression algorithms are used.[6]\n11. (a) Describe what is meant by a class and an object, and describe the relationship between them.\n(b) Describe what is meant by the term method, and describe the relationship between object and method.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 5,
        "markdown": "12. The algorithm in the flowchart is intended to sort an array in descending order. However, the algorithm contains several errors. Write a corrected version of the algorithm in pseudo-code.\n![img-1.jpeg](img-1.jpeg)",
        "images": [
            {
                "id": "img-1.jpeg",
                "top_left_x": 401,
                "top_left_y": 360,
                "bottom_right_x": 1223,
                "bottom_right_y": 2222,
                "image_path": "1500U30-1-030619/images/img_5_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 6,
        "markdown": "13. Describe the purpose, and give examples of, the use of compilers, interpreters and assemblers and distinguish between them.\n[13]\n\n# END OF PAPER",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    }
]