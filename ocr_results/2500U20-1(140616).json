[
    {
        "index": 0,
        "markdown": "# GCE AS/A Level \n\n## COMPUTER SCIENCE - Unit 2 Practical Programming to Solve Problems\n\nP.M. TUESDAY, 14 June 2016\n\n2 hours\n\n## INSTRUCTIONS TO CANDIDATES\n\nAnswer ALL questions.\nThe question paper is divided into two main sections. Below are the recommended timings for this assessment.\n\n## Section A\n\nYou are advised to spend no more than $\\mathbf{6 0}$ minutes on this section.\nYou will be required to analyse and deconstruct the scenario to consider its component parts in terms that can be addressed through automated computation.\n\n## Section B\n\nYou are advised to spend no more than $\\mathbf{6 0}$ minutes on this section.\nYou will be required to develop programs that solve computing problems referring to the initial scenario.\n\n## INFORMATION FOR CANDIDATES\n\nThe number of marks is given in brackets at the end of each question or part-question.\nThe total number of marks available is 60 .\nAssessment will take into account the quality of written communication used in your answers.\nYou will need a computer with an installed functional copy of the Integrated Development Environment (IDE) appropriate to your chosen programming language and word processing software.\nA calculator is allowed in this examination.\nRemember to save your work regularly.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 1,
        "markdown": "# Scenario \n\n![img-0.jpeg](img-0.jpeg)\n\nHappy Hols is a new travel agency based in Llandrindod Wells. The travel agency offers a variety of different holiday types to its customers.\n\nHappy Hols wishes to offer its customers the facility of being able to book their holidays using a computerised booking system. When a customer wishes to book a holiday, they can access holiday details via an interactive kiosk at the agency or by speaking to a member of staff who will access holiday details for the customer.\n\nThis new system will store details of customers along with details of the different holiday types that are available, such as all-inclusive, luxury, family, beach, ski and cruise holidays.\n\nThe main requirements of the new computer system for Happy Hols are:\n\n- The ability to store and search customer details\n- The ability to store holiday details and search for holidays using various preferences, e.g. search for all \"ski\" holidays or all \"5 star\" rated holidays\n- The ability to store bookings for each customer\n\nHappy Hols has provided the following partially completed entity-relationship diagram as an overview of the system they would like to create:\n\n## Customers Table\n\nCustomerID\n\u30fb.\n\u30fb.\n\u30fb.\n\u30fb\u30fb\n\nBookings Table\nBookingID\nBookingDate\nBookingTime\n\u30fb.\n\u30fb.\n\u30fb.\nHolidays Table\nHolidayID\n\u30fb.\n\u30fb.\n\u30fb.",
        "images": [
            {
                "id": "img-0.jpeg",
                "top_left_x": 430,
                "top_left_y": 343,
                "bottom_right_x": 1222,
                "bottom_right_y": 671,
                "image_path": "2500U20-1(140616)/images/img_1_0.jpeg"
            }
        ],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 2,
        "markdown": "# Section A: Analysis and Design (44 marks) \n\nYou have been asked to analyse the scenario as a preliminary step towards creating a computer system for Happy Hols.\n\nAnswer all questions. Present your answers as a single word-processed document named Section A - Analysis and Design.\n\n1. Draw two data structure tables that will allow Happy Hols to store customer and holiday details.\n2. Copy and complete the entity relationship diagram provided in the scenario.\n3. Construct a flowchart for the process of searching for a specific holiday, e.g. a Cruise.\n4. Select and fully justify your proposed method of solution for the three main requirements listed in the scenario.\n5. Different modes of operation are used for processing data in different operating systems.\n\nHappy Hols will have to consider different modes of operation that will affect their holiday booking system. Suggest one suitable and one unsuitable mode of operation for this system and justify your answers.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 3,
        "markdown": "6. Happy Hols stores the details of its holidays in an array, which is sorted in order of price (lowest to highest).\n\nHolidayArray[ ]:\n\n|  |  | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | $\\ldots$ |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| Holiday ID | 0 | 438 | 143 | 221 | 455 | 623 | 549 | 987 | 129 | $\\ldots$ |\n| Price \u00a3 | 1 | 240 | 255 | 275 | 285 | 295 | 310 | 325 | 350 | $\\ldots$ |\n\nUsing a recognised convention, design an algorithm that performs a search for all the HolidayIDs that are available between two entered price ranges.\n\nThe algorithm should output the HolidayID and price for all the matches between the two prices entered. If there are no Holidays available within the price range entered the algorithm should output: \"No Match Found\".\n\nFor example:\nIf the user entered a price range of:\nLowest $=250$\nHighest $=290$\nthen the algorithm would output:\nHolidayID: 143\nPrice \u00a3: 255\nHolidayID: 221\nPrice \u00a3: 275\nHolidayID: 455\nPrice \u00a3: 285\n\nSave your work as Section A - Analysis and Design.",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 4,
        "markdown": "# Section B: Develop programs (16 marks) \n\nSelect the programming language of your choice from section BI, BII or BIII and answer all 3 questions within your chosen section.\n\n## BI Visual Basic\n\nHappy Hols wants the computer system to be developed using Visual Basic.\n\n1. Open the file Holidays.sln\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code, which is intended to save holiday details and return the number of holidays that match the search criteria entered.\n\nComplete this code.\nRemember to save the changes made to the file Holidays.sln\n2. Create a new form, with a suitable interface, that will allow Happy Hols to:\n\n- Input customer details\n- Validate customer details\n- Store customer details on disc in a text file called customerdetails.txt\n- Retrieve specified customer details from disc\n\nSave your new form as Customers.frm\n3. Using the internal facility of your chosen language, annotate your code from question BI (2) to clearly explain the design of your program to another software developer.\n\nRemember to save the changes made to the file Customers.frm",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 5,
        "markdown": "# BII Java \n\n## Happy Hols wants the computer system to be developed using Java.\n\n1. Open the file Holiday.java\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code, which is intended to save holiday details and return the number of holidays that match the search criteria entered.\n\nComplete this code.\nRemember to save the changes made to the file Holiday.java\n2. Create a new form, with a suitable interface, that will allow Happy Hols to:\n\n- Input customer details\n- Validate customer details\n- Store customer details on disc in a text file called customerdetails.txt\n- Retrieve specified customer details from disc\n\nSave your new form as Customers.java\n3. Using the internal facility of your chosen language, annotate your code from question BII (2) to clearly explain the design of your program to another software developer.\n\nRemember to save the changes made to the file Customers.java",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    },
    {
        "index": 6,
        "markdown": "# BIII Python \n\n## Happy Hols wants the computer system to be developed using Python.\n\n1. Open the file Holidays.py\n\n- Read through the code and familiarise yourself with its contents.\n- The file contains incomplete code, which is intended to save holiday details and return the number of holidays that match the search criteria entered.\n\nComplete this code.\nRemember to save the changes made to the file Holidays.py\n2. Create a new form, with a suitable interface, that will allow Happy Hols to:\n\n- Input customer details\n- Validate customer details\n- Store customer details on disc in a text file called customerdetails.txt\n- Retrieve specified customer details from disc\n\nSave your new form as Customers.py\n3. Using the internal facility of your chosen language, annotate your code from question BIII (2) to clearly explain the design of your program to another software developer.\n\nRemember to save the changes made to the file Customers.py\n\n## END OF PAPER",
        "images": [],
        "dimensions": {
            "dpi": 200,
            "height": 2339,
            "width": 1654
        }
    }
]